name: Builder Win

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-win:
    name: Build PluginLoader for Win
    runs-on: windows-2022

    steps:
    - name: Checkout 🧰
      uses: actions/checkout@v4

    - name: Set up NodeJS 20 💎
      uses: actions/setup-node@v4
      with:
        node-version: 20
      
    - name: Set up Python 3.11.7 🐍
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.7"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: false
        
    - name: Install Python dependencies ⬇️
      working-directory: ./backend
      run: |
        C:\Users\runneradmin\.local\bin\poetry self add "poetry-dynamic-versioning[plugin]"
        C:\Users\runneradmin\.local\bin\poetry install --no-interaction

    - name: Install JS dependencies ⬇️
      working-directory: ./frontend
      run: |
        npm i -g pnpm
        pnpm i --frozen-lockfile

    - name: Build JS Frontend 🛠️
      working-directory: ./frontend
      run: pnpm run build

    - name: Build Python Backend 🛠️
      working-directory: ./backend
      run: |
        C:\Users\runneradmin\.local\bin\poetry dynamic-versioning
        C:\Users\runneradmin\.local\bin\poetry run pyinstaller pyinstaller.spec

    - name: Build Python Backend (noconsole) 🛠️
      working-directory: ./backend
      run: $env:DECKY_NOCONSOLE = 1; C:\Users\runneradmin\.local\bin\poetry run pyinstaller pyinstaller.spec

    - name: Upload package artifact ⬆️
      uses: actions/upload-artifact@v4
      with:
        name: PluginLoader Win
        path: |
          ./backend/dist/PluginLoader.exe
          ./backend/dist/PluginLoader_noconsole.exe
    
